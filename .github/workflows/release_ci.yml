name: Release workflow

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  extract_version:
    name: Extract sensor version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.step1.outputs.version }}
    steps:
      - name: Check tag and package version
        id: step1
        run: |
          export VERSION=$(echo $GITHUB_REF | sed -e 's/refs\/tags\/v//g')
          echo "::set-output name=version::$VERSION"
  build:
    name: Build binary
    needs: extract_version
    runs-on: ubuntu-latest
    container:
      image: powerapi/hwpc-sensor-build:latest
    steps:
      - uses: actions/checkout@v2
      - name: Create environement
        run: |
          mkdir build
          cd build
          GIT_TAG=$(git describe --tags --dirty 2>/dev/null || echo "unknown")
          GIT_REV=$(git rev-parse HEAD 2>/dev/null || echo "unknown")
      - name: Create Makefiles
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" -DCMAKE_C_CLANG_TIDY="clang-tidy" -DWITH_MONGODB="${MONGODB_SUPPORT}" ..
      - name: Build sensor
        run: |
          cd build
          make -j $(getconf _NPROCESSORS_ONLN)
      - uses: actions/upload-artifact@v2
        with:
          name: binary
          path: build/hwpc-sensor
  build_docker_image:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs: [extract_version, build]
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: Dockerfile
          tags: powerapi/hwpc-sensor:latest, powerapi/hwpc-sensor:${{needs.extract_version.outputs.version}}
  build_deb:
    name: Build debian package
    needs: [extract_version, build]
    runs-on: ubuntu-latest
    container:
      image: powerapi/hwpc-sensor-build:latest
    env:
      VERSION: ${{needs.extract_version.outputs.version}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: binary
          path: ~/bin/
      - name: Create package source
        run: |
          mkdir -p hwpc-sensor-$VERSION/DEBIAN
          cp control hwpc-sensor-$VERSION/DEBIAN/
          mkdir -p hwpc-sensor-$VERSION/usr/bin/
          cp ~/bin/hwpc-sensor hwpc-sensor-$VERSION/usr/bin/hwpc-sensor
          dpkg-deb --build hwpc-sensor-$VERSION
      - uses: actions/upload-artifact@v2
        with:
          name: deb_package
          path: hwpc-sensor-${{needs.extract_version.outputs.version}}.deb
  publish_release:
    name: Publish release on github
    runs-on: ubuntu-latest
    needs: [extract_version, build_deb]
    env:
      VERSION: ${{needs.extract_version.outputs.version}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: binary
          path: ~/assets/
      - uses: actions/download-artifact@v2
        with:
          name: deb_package
          path: ~/assets/
      - name: Create Changelog
        env:
          CHANGELOG_CONTENT: ${{ steps.changelog.outputs.clean_changelog }}
        run: |
          sudo apt install -y npm
          sudo npm install -g conventional-changelog-cli
          conventional-changelog -p angular -r 2 | grep -v "^# \[\]" | sed 's/^#//g' > ~/final-changelog.md
          cat ~/final-changelog.md
          cat ~/final-changelog.md >> CHANGELOG.md
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create v$VERSION -d -t v$VERSION -F ~/final-changelog.md ~/assets/*

